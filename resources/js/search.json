[[{"i":"#","p":["Welcome to the ModuBot documentation"]},{"l":"Welcome to ModuBot","p":["ModuBot is a modular, extensible bot framework for Python. It is designed to be easy to use, highly customizable, and suitable for a wide range of automation and bot tasks.","Modular architecture: Add or remove features as modules.","Powerful and flexible core.","Easy to extend and integrate with your own code."]},{"l":"Get Started","p":["Core Documentation","Explore the documentation to learn how to build and customize your own ModuBot!"]}],[{"i":"#","p":["Overview of the ModuBotCore core features"]},{"l":"Core","p":["This documentation covers the core of the ModuBot project. The core is provided as the Python package ModuBotCore and forms the foundation for building modular and extensible bots with ModuBot.","Use the default core out of the box or extend it with your own classes.","Built-in configuration system with type checking.","Flexible logger configuration.","Easy module integration and management.","You can start ModuBotCore directly or customize its behavior by subclassing and overriding configuration options.","For more details, see:","Installation","Core Usage","Module System","Helpers","Base Configuration","Logger Configuration"]}],[{"i":"#","p":["Base configuration class for ModuBotCore"]},{"l":"BaseConfig","p":["BaseConfig is the base class for all configuration classes in ModuBotCore. It provides automatic runtime type checking for class variables ( ClassVar).","When you create a subclass of BaseConfig, all ClassVar attributes are validated to ensure their types match the declared types. This helps catch configuration errors early."]},{"l":"Supported Types","p":["Primitive types: str, int, float, bool","Type wrappers, e.g., Type[SomeClass]","If a ClassVar has an invalid or unsupported value/type, a TypeError is raised at class creation time."]},{"l":"Example","p":["If you assign a wrong type, e.g. NAME: ClassVar[str] = 123, a TypeError will be raised immediately.","This ensures your configuration is always type-safe."]}],[{"i":"#","p":["Logger configuration for ModuBotCore"]},{"l":"Logger Configuration","p":["ModuBotCore provides a ready-to-use logger configuration via the LoggerConfig class."]},{"l":"LoggerConfig","p":["LoggerConfig inherits from BaseConfig and is a frozen dataclass. It defines the following class variables:","LEVEL: Logging level (e.g., DEBUG, INFO). Defaults to the LOG_LEVEL environment variable or 'INFO'.","FORMAT: Format string for log messages. Default: [%(asctime)s - %(levelname)s - %(name)s]: %(message)s","DATEFMT: Format string for timestamps in log messages. Default: %m/%d/%Y %H:%M:%S","You can use or override these settings in your own configuration if needed."]},{"l":"Example","p":["These settings control the log output format and level for all logging in ModuBotCore."]}],[{"i":"#","p":["Overview of helpers in ModuBotCore"]},{"l":"Helpers","p":["ModuBotCore provides useful helper functions in ModuBotCore.helpers."]},{"l":"str2bool","p":["str2bool(value: str) - bool","Converts a string to a boolean value. Useful for parsing configuration values or user input."]},{"l":"Example"}],[{"i":"#","p":["Installation guide for ModuBotCore"]},{"l":"Installation","p":["To install ModuBotCore, you need at least Python 3.9 on your system."]},{"l":"Step 1: Check your Python version","p":["Make sure Python 3.9 or newer is installed:","If you see an older version, download and install the latest version from python.org."]},{"l":"Step 2: Install ModuBotCore","p":["Install ModuBotCore using the following command:","That's it! ModuBotCore is now installed and ready to use."]}],[{"i":"#","p":["Usage and customization of ModuBotCore"]},{"l":"ModuBotCore Usage","p":["You can use the default core directly:","Or you can customize it by creating your own class that inherits from ModuBotCore.","You have access to the logger via self.logger.","To start and stop the bot, use the run() and stop() methods."]},{"l":"Important ClassVars"},{"l":"Example: Custom Core","p":["This allows you to extend and modify the core functionality as needed."]}],[{"i":"#","p":["How to create a module for ModuBotCore"]},{"l":"Module Template","p":["To create a new module for ModuBotCore, you need to define a class in modules/{name}/__init__.py that inherits from ModuBotCore.modules.BaseModule.","BaseModule is an abstract class, so you must implement the following methods:","on_enable(self): Called when the module is enabled.","on_disable(self): Called when the module is disabled.","You also have access to a logger via self.logger for logging within your module.","There are two important ClassVar attributes you can set:","NAME: The name of your module (string).","ENABLING: Set to True(default) if the module should be enabled on startup. If set to False, the module will not be activated automatically."]},{"l":"Example","p":["Place this class in modules/MyModule/__init__.py to register your module."]}]]